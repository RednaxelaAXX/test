name: matrix
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - cross_host: aarch64
          - cross_host: x86_64
    env:
      ACTION_MULTI_ARCH: "yes"
      CROSS_HOST_ARCH: "${{ matrix.cross_host }}"
    steps:
      - uses: actions/checkout@v2.3.4
      - run: sudo -E bash qbittorrent-nox-static.sh # bootstrap 1
        #
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh # bootstrap 2
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh zlib
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh openssl
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh icu
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh boost
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh libtorrent
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh qtbase
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh qttools
      - run: proot -q "qemu-${{ matrix.cross_host }}-static" -S "qb-build/multiarch" bash qbittorrent-nox-static.sh qbittorrent
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "qbittorrent-nox-${{ matrix.cross_host }}"
          path: qb-build/completed/qbittorrent-nox
